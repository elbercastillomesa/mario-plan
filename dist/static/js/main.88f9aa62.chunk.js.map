{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authActions.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/ProjectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","layout_SignInLinks","layout_SignOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","authorId","add","objectSpread","authorID","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88f9aa62.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a href=\"true\" onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignInLinks);","export const signIn = (credentials) => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email, \n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        })\n    }\n}\n\nexport const signOut = () => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n                dispatch({type: 'SIGNOUT_SUCCESS'});\n            }\n        )\n    }\n}\n\nexport const signUp = (newUser) => {\n    return(dispatch, getState, {getFirebase, getFirestore}) => {\n\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(\n            (resp) => {\n                return firestore.collection('users').doc(resp.user.uid).set({\n                    firstName: newUser.firstName,\n                    lastName: newUser.lastName,\n                    initials: newUser.firstName[0] + newUser.lastName[0]\n                })\n        }).then( () => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst SignOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignInLinks from './SignInLinks';\nimport SignOutLinks from './SignOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignInLinks profile={profile} /> : <SignOutLinks />;\n  \n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\"> MarioPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {    \n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n\n    const {notifications} = props\n\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        { moment(item.time.toDate()).fromNow() }\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by { project.authorFirstName + ' ' + project.authorLastName }</p>\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">            \n            {projects && projects.map( //The ampersan is used to evaluate if there's projects to implement the map\n                project => {\n                    return(\n                        <Link to={'/project/' + project.id} key={project.id}>\n                            <ProjectSummary project={project} />\n                        </Link>\n                    )\n                }\n            )}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n\n    render(){\n        const { projects, auth, notifications } = this.props;        \n        if(!auth.uid) return <Redirect to ='/signin' />\n\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state.firestore.ordered.notifications);\n    return{\n        projects: state.firestore.ordered.projects,  // now the data is imported from google's firestore\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ]))(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props)  => {\n\n    const { project, auth } = props;\n\n    if(!auth.uid) return <Redirect to ='/signin' />\n\n    if(project){\n        return(\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <div className=\"card-title\"> { project.title }</div>\n                        <p>{ project.content }</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n                        <div>{  moment(project.createdAt.toDate()).calendar()  }</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"container center\">\n                <p>Loading Project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    \n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n\n    state = {\n        email : '',\n        password : ''\n    }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n\n        if(auth.uid) return <Redirect to ='/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange = {this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n\n    state = {\n        email : '',\n        password : '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state);\n    }\n\n    render() {\n\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to ='/' />\n\n        return (\n            <div className=\"container\">\n\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    \n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange = {this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{ authError }</p> : null}\n                        </div>\n                    </div>\n\n                </form>                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/ProjectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state)\n        this.props.createProject(this.state)\n    }\n\n    render() {\n\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to ='/signin' />\n        \n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    \n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);    // The first parameter of connect function must be \n                                                                    // 'mapStateToProps' but in this component isn't used, so\n                                                                    // is used a null instead.","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //Make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({         \n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorID: authorId,\n            createdAt: new Date()\n        }).then( () => {\n            dispatch({ type: 'CREATE_PROJECT', project: project })\n        } ).catch( (err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        } )       \n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('Login ERROR');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login SUCCESS');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('Sign out SUCCESS');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signUp SUCCESS');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signUp ERROR');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_PROJECT': \n            console.log('created project', action.project)\n            return state;\n        case 'CREATE_PROJECT_ERROR': \n            console.log('created project error', action.err)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","// Initialize firebase\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCmFKUZlv_R7KhMC2etYj6yDFzajuFq48k\",\n    authDomain: \"net-ninja-marioplan-8e431.firebaseapp.com\",\n    databaseURL: \"https://net-ninja-marioplan-8e431.firebaseio.com\",\n    projectId: \"net-ninja-marioplan-8e431\",\n    storageBucket: \"net-ninja-marioplan-8e431.appspot.com\",\n    messagingSenderId: \"127640194548\",\n    appId: \"1:127640194548:web:1bf512b68cf7c444\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true })\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(\n            thunk.withExtraArgument({ getFirebase, getFirestore })\n        ),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store = {store}>\n            <App />\n        </Provider>, document.getElementById('root')\n    );\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}